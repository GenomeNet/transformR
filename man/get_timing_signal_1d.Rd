% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/positional-encodings.R
\name{get_timing_signal_1d}
\alias{get_timing_signal_1d}
\title{Gets a timing signal for a given length and number of channels}
\usage{
get_timing_signal_1d(
  length,
  channels,
  min_timescale = 1,
  max_timescale = 10000,
  start_index = 0
)
}
\arguments{
\item{length}{scalar, length of timing signal sequence.}

\item{channels}{scalar, size of timing embeddings to create.
The number of different timescales is equal to channels / 2.}

\item{min_timescale:}{a float}

\item{max_timescale:}{a float}

\item{start_index:}{index of first position}
}
\description{
Gets a bunch of sinusoids of different frequencies.
Each channel of the input Tensor is incremented by a sinusoid of a different
frequency and phase.
This allows attention to learn to use absolute and relative positions.
Timing signals should be added to some precursors of both the query and the
memory inputs to attention.
The use of relative position is possible because sin(x+y) and cos(x+y) can
be expressed in terms of y, sin(x) and cos(x).
In particular, we use a geometric sequence of timescales starting with
min_timescale and ending with max_timescale.  The number of different
timescales is equal to channels / 2. For each timescale, we
generate the two sinusoidal signals sin(timestep/timescale) and
cos(timestep/timescale).  All of these sinusoids are concatenated in
the channels dimension.
}
